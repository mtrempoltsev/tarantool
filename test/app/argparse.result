-- internal argparse test
test_run = require('test_run').new()
---
...
test_run:cmd("push filter ".."'\\.lua.*:[0-9]+: ' to '.lua:<line>\"]: '")
---
- true
...
argparse = require('internal.argparse').parse
---
...
-- test with empty arguments and options
argparse()
---
- []
...
-- test with command name (should be excluded)
argparse({[0] = 'tarantoolctl', 'start', 'instance'})
---
- - start
  - instance
...
-- test long option
argparse({'tarantoolctl', 'start', 'instance', '--start'})
---
- 1: tarantoolctl
  2: start
  3: instance
  start: true
...
argparse({'tarantoolctl', 'start', 'instance', '--start', '--stop'})
---
- 1: tarantoolctl
  2: start
  3: instance
  start: true
  stop: true
...
argparse({'tarantoolctl', 'start', 'instance', '--start', '--stop', '--stop'})
---
- 1: tarantoolctl
  2: start
  3: instance
  start: true
  stop:
  - true
  - true
...
argparse({'tarantoolctl', 'start', 'instance', '--start', '--stop', '--stop'})
---
- 1: tarantoolctl
  2: start
  3: instance
  start: true
  stop:
  - true
  - true
...
argparse({'tarantoolctl', 'start', 'instance', '-baobab'})
---
- 1: tarantoolctl
  2: start
  3: instance
  b:
  - true
  - true
  - true
  o: true
  a:
  - true
  - true
...
argparse({'tarantoolctl', 'start', 'instance', '-vovov'})
---
- 1: tarantoolctl
  2: start
  3: instance
  o:
  - true
  - true
  v:
  - true
  - true
  - true
...
argparse({'tarantoolctl', 'start', 'instance', '--start=lalochka'})
---
- 1: tarantoolctl
  2: start
  3: instance
  start: lalochka
...
argparse({'tarantoolctl', 'start', 'instance', '--start', 'lalochka'})
---
- 1: tarantoolctl
  2: start
  3: instance
  start: lalochka
...
argparse({'tarantoolctl', 'start', 'instance', '--start', '--', 'lalochka'})
---
- error: 'builtin/internal.argparse.lua:<line>"]: bad argument #5: ID not valid'
...
argparse({'tarantoolctl', 'start', 'instance', '--start', '-', 'lalochka'})
---
- 1: tarantoolctl
  2: start
  3: instance
  4: lalochka
  start: true
...
argparse({'--verh=42'}, {{'verh', 'number'}})
---
- verh: 42
...
argparse({'--verh=42'}, {{'verh', 'number+'}})
---
- verh:
  - 42
...
argparse({'--verh=42'}, {{'verh', 'string'}})
---
- verh: '42'
...
argparse({'--verh=42'}, {{'verh', 'string+'}})
---
- verh:
  - '42'
...
argparse({'--verh=42'}, {{'verh'}})
---
- verh: '42'
...
argparse({'--verh=42'}, {'verh'})
---
- verh: '42'
...
argparse({'--verh=42'}, {{'verh', 'boolean'}})
---
- error: 'builtin/internal.argparse.lua:<line>"]: Bad value for parameter "verh". Expected
    boolean, got "42"'
...
argparse({'--verh=42'}, {{'verh', 'boolean+'}})
---
- error: 'builtin/internal.argparse.lua:<line>"]: Bad value for parameter "verh". Expected
    boolean, got "42"'
...
argparse({'--verh=42'}, {'niz'})
---
- error: 'builtin/internal.argparse.lua:<line>"]: unknown options: verh'
...
argparse({'--super-option'})
---
- super-option: true
...
argparse({'tarantoolctl', 'start', 'instance', '--start=lalochka', 'option', '-', 'another option'})
---
- 1: tarantoolctl
  2: start
  3: instance
  4: option
  5: '-'
  6: another option
  start: lalochka
...
--
-- gh-4076: argparse incorrectly processed boolean parameters,
-- that led to problems with tarantoolctl usage.
--
params = {}
---
...
params[1] = {'flag1', 'boolean'}
---
...
params[2] = {'flag2', 'boolean'}
---
...
params[3] = {'flag3', 'boolean'}
---
...
params[4] = {'flag4', 'boolean'}
---
...
params[5] = {'flag5', 'boolean'}
---
...
args = {'--flag1', 'true', '--flag2', '1', '--flag3', 'false', '--flag4', '0', '--flag5', 'TrUe'}
---
...
argparse(args, params)
---
- flag4: false
  flag1: true
  flag5: true
  flag2: true
  flag3: false
...
args = {'--flag1', 'abc'}
---
...
argparse(args, params)
---
- error: 'builtin/internal.argparse.lua:<line>"]: Bad value for parameter "flag1". Expected
    boolean, got "abc"'
...
--
-- When parameter value was omitted, it was replaced internally
-- with boolean true, and sometimes was showed in error messages.
-- Now it is 'nothing'.
--
params = {}
---
...
params[1] = {'value', 'number'}
---
...
argparse({'--value'}, params)
---
- error: 'builtin/internal.argparse.lua:<line>"]: Bad value for parameter "value". Expected
    number, got nothing'
...
params[1][2] = 'string'
---
...
argparse({'--value'}, params)
---
- error: 'builtin/internal.argparse.lua:<line>"]: Bad value for parameter "value". Expected
    string, got nothing'
...
test_run:cmd("clear filter")
---
- true
...
